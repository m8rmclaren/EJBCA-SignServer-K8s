apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "signserver.fullname" . }}
  labels:
    {{- include "signserver.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.signserver.replicaCount }}
  selector:
    matchLabels:
      {{- include "signserver.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.signserver.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "signserver.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.signserver.image.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "signserver.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.signserver.image.repository }}:{{ .Values.signserver.image.tag }}"
          imagePullPolicy: {{ .Values.signserver.image.pullPolicy }}
          ports:
            {{- range .Values.signserver.containerPorts }}
            - name: {{ .name }}
              containerPort: {{ .containerPort }}
              protocol: {{ .protocol }}
            {{- end }}
          startupProbe:
            httpGet:
              port: 8081
              path: /signserver/healthcheck/signserverhealth
            failureThreshold: 1000 # 50 * 2 seconds + 45-second delay gives 145 seconds for signserver to start
            periodSeconds: 2
            initialDelaySeconds: 45
          livenessProbe:
            httpGet:
              port: 8081
              path: /signserver/healthcheck/signserverhealth
          env:
            - name: DATABASE_JDBC_URL
              value: "jdbc:mariadb://{{ .Values.database.service.name }}:{{ .Values.database.service.port }}/signserver?characterEncoding=utf8"
            - name: DATABASE_USER
              value: {{ .Values.database.username }}
            - name: DATABASE_PASSWORD
              value: {{ .Values.database.password }}
            - name: PROXY_HTTP_BIND
              value: "{{ .Values.signserver.proxyHttpBind }}"
            - name: LOG_AUDIT_TO_DB
              value: "{{ .Values.signserver.logAuditToDatabase }}"
            - name: TLS_SETUP_ENABLED
              value: "simple"
          volumeMounts:
          {{- range .Values.signserver.volumes }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      {{- range .Values.signserver.volumes }}
        - name: {{ .name }}
          configMap: 
            name: {{ .configMapName }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

